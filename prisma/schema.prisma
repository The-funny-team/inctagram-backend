generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String   @unique
  email        String   @unique
  hashPassword String   @map("hash_password")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  isDeleted    Boolean  @default(false)
  posts        Post[]
  userRegistrationInfo UserRegistrationInfo?
  devices Device[]

  @@map("users")
}

model UserRegistrationInfo {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")
  isConfirmed Boolean @default(false) @map("is_confirmed")
  confirmationCode String @map("confirmation_code")
  expirationConfirmationCode DateTime @map("expiration_confirmation_code")
  recoveryCode String? @map("recovery_code")
  expirationRecoveryCode DateTime? @map("expiration_recovery_code")

  @@map("users_registration_info")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  authorId  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isDeleted Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])

  @@map("posts")
}

model Device {
  id        String   @id @default(uuid())
  ip        String
  title     String
  lastActiveDate DateTime   @map("last_active_date")
  expirationDate DateTime   @map("expiration_date")
  user User @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")

  @@map("devices")
}
